from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import csv
import time

global browser
browser = webdriver.Chrome("C:\chromedriver\chromedriver.exe")  # load chromedriver

browser.get("https://www.linkedin.com/uas/login")  # jump to the login page
file = open("C:\password\config.txt")  # linkedin username and password in local path
lines = file.readlines()
username = lines[0]
password = lines[1]

elementID = browser.find_element_by_id("username")
elementID.send_keys(username)

elementID = browser.find_element_by_id("password")
elementID.send_keys(password)
elementID.submit()
file.close()

base_link = "https://www.linkedin.com/search/results/people/?facetGeoRegion=%5B%22us%3A0%22%5D&facetIndustry=%5B%2257" \
            "%22%5D&origin=FACETED_SEARCH&page="  # put the pre-search link in here


# jump to the linkedin search "people " page, with default filter "Oil & energy" "United States"


def get_client_name():
    client_name = []
    for name in browser.find_elements_by_xpath("//span[@class = 'name actor-name']"):  # find the name
        client_name.append(name.text)
    return client_name


def get_title_company_name():
    title_company_name = []
    for title in browser.find_elements_by_xpath(
            ".//p[@class = 'subline-level-1 t-14 t-black t-normal search-result__truncate']"):
        title_company_name.append(title.text)
    return title_company_name


def get_email_url():
    get_url = []
    get_email_address = []
    for name in browser.find_elements_by_xpath("//span[@class = 'name actor-name']"):  # find the name
        name.click()
        get_linked_url = browser.current_url   # get the client current profile url
        get_url.append(get_linked_url)
        browser.implicitly_wait(10)
        browser.find_element_by_link_text("Contact info").click()  # click the "Contact Info" to get a submenu
        try:
            browser.implicitly_wait(10)
            get_email = browser.find_element_by_class_name(
                "pv-contact-info__contact-type ci-email").find_element_by_tag_name(
                'a').text  # get the email address
            get_email_address.append(get_email)
        except Exception:
            pass

    return list(zip(get_url, get_email_address))


for i in range(1, 11):
    browser.get(base_link + f'{i}')
    n = get_client_name()
    t = get_title_company_name()
    e = get_email_url()
    time.sleep(2)
print(n, t, e)

w
